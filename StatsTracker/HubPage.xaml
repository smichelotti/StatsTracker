<common:LayoutAwarePage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StatsTracker"
    xmlns:data="using:StatsTracker.Data"
    xmlns:common="using:StatsTracker.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Controls="using:Callisto.Controls"
    xmlns:Input="using:Telerik.UI.Xaml.Controls.Input"
    x:Name="pageRoot"
    x:Class="StatsTracker.HubPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Mode=Self}}"
    mc:Ignorable="d">

    <common:LayoutAwarePage.Resources>

        <common:StringFormatConverter x:Name="StringFormatConverter"/>
       
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding Groups}"
            IsSourceGrouped="true"
            ItemsPath="TopItems"
            d:Source="{Binding AllGroups, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=data:StatsDesignTimeDataSource}}" />

        <DataTemplate x:Key="Game250x250ItemTemplate">
            <Grid HorizontalAlignment="Left" Width="250" Height="250">
                <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                    <!--<Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Opponent}"/>-->
                    <Image Source="ms-appx:///Assets/basketball.png" Stretch="UniformToFill" AutomationProperties.Name="{Binding Opponent}"/>
                </Border>
                <StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
                    <TextBlock Text="{Binding Opponent}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                    <Grid>
                        <TextBlock HorizontalAlignment="Left" Text="{Binding Date, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:M/dd/yyyy}'}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                        <TextBlock HorizontalAlignment="Right" Text="{Binding Score}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                    </Grid>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Player250x250ItemTemplate">
            <Grid HorizontalAlignment="Left" Width="250" Height="250">
                <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                    <Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Name}"/>
                </Border>
                <StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                    <TextBlock Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10">
                    	<Run Text="#"/>
                        <Run Text="{Binding Number}"/>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <local:ItemsTemplateSelector x:Name="statsTemplateSelector" GameTemplate="{StaticResource Game250x250ItemTemplate}" PlayerTemplate="{StaticResource Player250x250ItemTemplate}"/>
    </common:LayoutAwarePage.Resources>

    <common:LayoutAwarePage.BottomAppBar>
        <AppBar x:Name="bottomAppBar" Padding="10,0,10,0">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Style="{StaticResource AddGameAppBarButtonStyle}" Command="{Binding HubViewModel.EditGameViewModel.OpenAddGame}"/>
                    <Button Style="{StaticResource ImportGameAppBarButtonStyle}" Command="{Binding HubViewModel.ImportGame}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource RefreshPlayersAppBarButtonStyle}" Command="{Binding HubViewModel.RefreshPlayers}"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.BottomAppBar>

    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,137,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <!--<FlipView HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <FlipViewItem>
                <TextBlock Style="{StaticResource GroupHeaderTextStyle}">test1</TextBlock>
            </FlipViewItem>
            <FlipViewItem>
                <TextBlock Style="{StaticResource GroupHeaderTextStyle}">test2</TextBlock>
            </FlipViewItem>
            
        </FlipView>-->

        <!--<ProgressBar x:Name="progressBar" Visibility="Collapsed" IsIndeterminate="True" Width="500"/>-->
        <ProgressBar x:Name="progressBar" Visibility="{Binding HubViewModel.IsProgressVisible, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="True" Width="500"/>

        <!-- Horizontal scrolling grid used in most view states -->

        <GridView
			x:Name="itemGridView"
			AutomationProperties.AutomationId="ItemGridView"
			AutomationProperties.Name="Grouped Items"
			Grid.RowSpan="2"
			Padding="116,137,40,46"
			ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
			ItemTemplateSelector="{StaticResource statsTemplateSelector}"
			SelectionMode="None"
			IsItemClickEnabled="True"
			ItemClick="itemGridView_ItemClick"
			IsSwipeEnabled="false">

            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="1,0,0,6">
                                <Button
									AutomationProperties.Name="Group Title"
									Style="{StaticResource TextPrimaryButtonStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </GridView.GroupStyle>
        </GridView>

        <!-- Vertical scrolling list only used when snapped -->
        <ListView
			x:Name="itemListView"
			AutomationProperties.AutomationId="ItemListView"
			AutomationProperties.Name="Grouped Items"
			Grid.Row="1"
			Visibility="Collapsed"
			Margin="0,-10,0,0"
			Padding="10,0,0,60"
			ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
			ItemTemplate="{StaticResource Standard80ItemTemplate}"
			SelectionMode="None"
			IsSwipeEnabled="false">

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="7,7,0,0">
                                <Button
									AutomationProperties.Name="Group Title"
									Style="{StaticResource TextPrimaryButtonStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>


        <Controls:CustomDialog x:Name="AddGameDialog" HorizontalAlignment="Left" Title="Add Game" IsOpen="{Binding HubViewModel.EditGameViewModel.AddGameDialogIsVisible,Mode=TwoWay}" BackButtonVisibility="Visible" BackButtonClicked="AddGameDialog_BackButtonClicked" Background="White" VerticalAlignment="Top">
            
            <StackPanel>
                <TextBlock Style="{StaticResource DialogTextStyle}" Text="Opponent"/>
                <TextBox x:Name="txtOpponent" FontSize="20" Text="{Binding HubViewModel.EditGameViewModel.Game.Opponent, Mode=TwoWay}" />

                <TextBlock Style="{StaticResource DialogTextStyle}">Date</TextBlock>
                <Input:RadDatePicker x:Name="gameDatePicker" HorizontalAlignment="Left" VerticalAlignment="Top" Value="{Binding HubViewModel.EditGameViewModel.Game.Date, Mode=TwoWay}"/>

                <Button FontSize="20" Margin="0,10,0,0" Command="{Binding HubViewModel.EditGameViewModel.SaveNewGame}">Save</Button>
            </StackPanel>
        </Controls:CustomDialog>


        


    </Grid>
</common:LayoutAwarePage>
